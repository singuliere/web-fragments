[tox]
envlist = {py36,py37}-django{20,21}

[doc8]
max-line-length = 120

[pycodestyle]
exclude = .git,.tox,migrations
max-line-length = 120

[pydocstyle]
; D101 = Missing docstring in public class
; D200 = One-line docstring should fit on one line with quotes
; D203 = 1 blank line required before class docstring
; D212 = Multi-line docstring summary should start at the first line
ignore = D101,D200,D203,D212
match-dir = (?!migrations)

[pytest]
DJANGO_SETTINGS_MODULE = test_settings
addopts = --cov web_fragments --cov-report term-missing --cov-report xml
norecursedirs = .* docs requirements

[testenv]
deps =
    django20: Django>=2.0,<2.1
    django21: Django>=2.1,<2.2
    -r{toxinidir}/requirements/test.txt
commands =
    py.test {posargs}

[testenv:docs]
setenv =
    DJANGO_SETTINGS_MODULE = test_settings
    PYTHONPATH = {toxinidir}
whitelist_externals =
    make
    rm
deps =
    -r{toxinidir}/requirements/doc.txt
commands =
    doc8 --ignore-path docs/_build README.rst docs
    rm -f docs/web_fragments.rst
    rm -f docs/modules.rst
    make -C docs clean
    make -C docs html
    python setup.py check --restructuredtext --strict

[testenv:quality]
# pin to python3.5 until pylint supports python3.6+
basepython = python3.5
whitelist_externals =
    make
    rm
    touch
deps =
    -r{toxinidir}/requirements/doc.txt
    -r{toxinidir}/requirements/quality.txt
    -r{toxinidir}/requirements/test.txt
commands =
    touch web_fragments/tests/__init__.py
    pylint web_fragments
    # pylint --py3k web_fragments
    rm web_fragments/tests/__init__.py
    isort --check-only --recursive web_fragments manage.py setup.py test_settings.py
    make help
